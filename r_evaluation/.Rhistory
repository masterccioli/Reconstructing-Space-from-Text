colnames(points) = c('indepV1','indepV2','depV1','depV2')
cluster1 = BiDimRegression(points)
# evaluate against cluster2
points = read.csv('../distributions/points/cluster2.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
cluster2 = BiDimRegression(points)
# evaluate against shape
points = read.csv('../distributions/points/shape_20.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
shape = BiDimRegression(points)
bid_reg = rbind(bid_reg, c(model,source,relationship,sampledAs,
cluster1$affine.r, cluster1$affine.pValue,
cluster2$affine.r, cluster2$affine.pValue,
shape$affine.r, shape$affine.pValue))
}
colnames(bid_reg) = c('model','source','relationship','sampledAs',
'cluster1 r', 'cluster1 p',
'cluster2 r', 'cluster2 p',
'shape r', 'shape p')
write.csv(bid_reg, 'bidim_output/bidimensional_regression.csv')
library(MASS)
library(BiDimRegression)
rm(list = ls())
library(vegan)
simtodist <- function(sims, gamma = 1) {
base <- exp(-gamma * sims)
base/sum(base)
}
num_points = 20
files = list.files('../distributions/points/') # get all filens in this directory
for (file in files){
#file = files[2]
data = data.matrix(read.csv(paste('../distributions/points/',file, sep = ''), header = TRUE,check.names=F)) # load data
# get the string headers for points
# num_points = sum(grepl('\\d',colnames(data)))
#d = simtodist(data.matrix(data)[0:num_points,0:num_points],gamma=1)
#fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
#fit # view results
# plot solution
x <- data[,1]
y <- data[,2]
jpeg(paste('plots/original/',file,'.jpg'))
plot(x, y, xlab="", ylab="", type="n")
text(x, y, labels = LETTERS[1:nrow(data)], cex=1.5)
dev.off()
}
bid_reg = c()
files = list.files('cosines/uniform/') # get all filens in this directory
files = list.files('../cosines/uniform/') # get all filens in this directory
for (file in files){
# for each item in files
file = files[4]
data = read.csv(paste('../cosines/uniform/',file, sep = ''), header = TRUE,check.names=F) # load data
# get the string headers for points
#num_points = sum(grepl('\\d',colnames(data)))
d = simtodist(data.matrix(data)[0:num_points,0:num_points],gamma=1)
#fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
fit <- isoMDS(d,k=2) # k is the number of dim
fit # view results
# plot solution
x <- fit$points[,1]
y <- fit$points[,2]
jpeg(paste('plots/uniform/',file,'.jpg'))
plot(x, y, xlab="", ylab="",
main="", type="n")
text(x, y, labels = colnames(data)[0:num_points], cex=1.5)
#text(x, y, labels = LETTERS[1:num_points], cex=1.5)
dev.off()
# check which distribution
if (grepl('cluster_1',file)){
points = read.csv('../distributions/points/cluster1.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('uniform',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('uniform',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
if (grepl('cluster_2',file)){
points = read.csv('../distributions/points/cluster2.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('uniform',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('uniform',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
if (grepl('shape',file)){
points = read.csv('../distributions/points/shape_20.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('uniform',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('uniform',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
}
for (file in files){
# for each item in files
# file = files[4]
data = read.csv(paste('../cosines/uniform/',file, sep = ''), header = TRUE,check.names=F) # load data
# get the string headers for points
#num_points = sum(grepl('\\d',colnames(data)))
d = simtodist(data.matrix(data)[0:num_points,0:num_points],gamma=1)
#fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
fit <- isoMDS(d,k=2) # k is the number of dim
fit # view results
# plot solution
x <- fit$points[,1]
y <- fit$points[,2]
jpeg(paste('plots/uniform/',file,'.jpg'))
plot(x, y, xlab="", ylab="",
main="", type="n")
text(x, y, labels = colnames(data)[0:num_points], cex=1.5)
#text(x, y, labels = LETTERS[1:num_points], cex=1.5)
dev.off()
# check which distribution
if (grepl('cluster_1',file)){
points = read.csv('../distributions/points/cluster1.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('uniform',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('uniform',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
if (grepl('cluster_2',file)){
points = read.csv('../distributions/points/cluster2.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('uniform',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('uniform',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
if (grepl('shape',file)){
points = read.csv('../distributions/points/shape_20.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('uniform',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('uniform',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
}
num_points = 20
files = list.files('../distributions/points/') # get all filens in this directory
for (file in files){
#file = files[2]
data = data.matrix(read.csv(paste('../distributions/points/',file, sep = ''), header = TRUE,check.names=F)) # load data
# get the string headers for points
# num_points = sum(grepl('\\d',colnames(data)))
#d = simtodist(data.matrix(data)[0:num_points,0:num_points],gamma=1)
#fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
#fit # view results
# plot solution
x <- data[,1]
y <- data[,2]
jpeg(paste('plots/original/',file,'.jpg'))
plot(x, y, xlab="", ylab="", type="n")
text(x, y, labels = LETTERS[1:nrow(data)], cex=1.5)
dev.off()
}
bid_reg = c()
files = list.files('../cosines/uniform/') # get all filens in this directory
for (file in files){
# for each item in files
# file = files[4]
data = read.csv(paste('../cosines/uniform/',file, sep = ''), header = TRUE,check.names=F) # load data
# get the string headers for points
#num_points = sum(grepl('\\d',colnames(data)))
d = simtodist(data.matrix(data)[0:num_points,0:num_points],gamma=1)
#fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
fit <- isoMDS(d,k=2) # k is the number of dim
fit # view results
# plot solution
x <- fit$points[,1]
y <- fit$points[,2]
jpeg(paste('plots/uniform/',file,'.jpg'))
plot(x, y, xlab="", ylab="",
main="", type="n")
text(x, y, labels = colnames(data)[0:num_points], cex=1.5)
#text(x, y, labels = LETTERS[1:num_points], cex=1.5)
dev.off()
# check which distribution
if (grepl('cluster_1',file)){
points = read.csv('../distributions/points/cluster1.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('uniform',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('uniform',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
if (grepl('cluster_2',file)){
points = read.csv('../distributions/points/cluster2.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('uniform',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('uniform',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
if (grepl('shape',file)){
points = read.csv('../distributions/points/shape_20.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('uniform',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('uniform',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
}
files = list.files('../cosines/roc/') # get all filens in this directory
for (file in files){
# for each item in files
#file = files[11]
data = read.csv(paste('../cosines/roc/',file, sep = ''), header = TRUE,check.names=F) # load data
# get the string headers for points
#num_points = sum(grepl('\\d',colnames(data)))
d = simtodist(data.matrix(data)[0:num_points,0:num_points],gamma=1)
#fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
fit <- isoMDS(d, k=2) # k is the number of dim
fit # view results
# plot solution
x <- fit$points[,1]
y <- fit$points[,2]
jpeg(paste('plots/roc/',file,'.jpg'))
plot(x, y, xlab="", ylab="",
main="", type="n")
text(x, y, labels = colnames(data)[0:num_points], cex=1.5)
#text(x, y, labels = colnames(data)[0:num_points], cex=1.5)
dev.off()
# check which distribution
if (grepl('cluster_1',file)){
points = read.csv('../distributions/points/cluster1.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('roc',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('roc',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
if (grepl('cluster_2',file)){
points = read.csv('../distributions/points/cluster2.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('roc',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('roc',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
if (grepl('shape',file)){
points = read.csv('../distributions/points/shape_20.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('roc',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('roc',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
}
files = list.files('../cosines/distance/') # get all filens in this directory
files = list.files('../cosines/distance/') # get all filens in this directory
for (file in files){
# for each item in files
#file = files[11]
data = read.csv(paste('../cosines/distance/',file, sep = ''), header = TRUE,check.names=F) # load data
# get the string headers for points
#num_points = sum(grepl('\\d',colnames(data)))
d = simtodist(data.matrix(data)[0:num_points,0:num_points],gamma=1)
#fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
fit <- isoMDS(d, k=2) # k is the number of dim
fit # view results
# plot solution
x <- fit$points[,1]
y <- fit$points[,2]
jpeg(paste('plots/distance/',file,'.jpg'))
plot(x, y, xlab="", ylab="",
main="", type="n")
text(x, y, labels = colnames(data)[0:num_points], cex=1.5)
#text(x, y, labels = colnames(data)[0:num_points], cex=1.5)
dev.off()
# check which distribution
if (grepl('cluster_1',file)){
points = read.csv('../distributions/points/cluster1.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('roc',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('distance',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
if (grepl('cluster_2',file)){
points = read.csv('../distributions/points/cluster2.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('roc',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('distance',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
if (grepl('shape',file)){
points = read.csv('../distributions/points/shape_20.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('roc',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('distance',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
}
colnames(bid_reg) = c('sampling','model/distribution','r','p','r^2')
bid_reg2 = bid_reg[as.numeric(bid_reg[,4]) < .05,]
write.csv(bid_reg, 'bidim_output/bidimensional_regression.csv')
write.csv(bid_reg2, 'bidim_output/bidimensional_regression_sig_p.csv')
file = files[11]
file = files[1]
simtodist <- function(sims, gamma = 1) {
base <- exp(-gamma * sims)
base/sum(base)
}
num_points = 20
files = list.files('../distributions/points/') # get all filens in this directory
for (file in files){
#file = files[2]
data = data.matrix(read.csv(paste('../distributions/points/',file, sep = ''), header = TRUE,check.names=F)) # load data
# get the string headers for points
# num_points = sum(grepl('\\d',colnames(data)))
#d = simtodist(data.matrix(data)[0:num_points,0:num_points],gamma=1)
#fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
#fit # view results
# plot solution
x <- data[,1]
y <- data[,2]
jpeg(paste('plots/original/',file,'.jpg'))
plot(x, y, xlab="", ylab="", type="n")
text(x, y, labels = LETTERS[1:nrow(data)], cex=1.5)
dev.off()
}
bid_reg = c()
files = list.files('../cosines/uniform/') # get all filens in this directory
for (file in files){
# for each item in files
# file = files[4]
data = read.csv(paste('../cosines/uniform/',file, sep = ''), header = TRUE,check.names=F) # load data
# get the string headers for points
#num_points = sum(grepl('\\d',colnames(data)))
d = simtodist(data.matrix(data)[0:num_points,0:num_points],gamma=1)
#fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
fit <- isoMDS(d,k=2) # k is the number of dim
fit # view results
# plot solution
x <- fit$points[,1]
y <- fit$points[,2]
jpeg(paste('plots/uniform/',file,'.jpg'))
plot(x, y, xlab="", ylab="",
main="", type="n")
text(x, y, labels = colnames(data)[0:num_points], cex=1.5)
#text(x, y, labels = LETTERS[1:num_points], cex=1.5)
dev.off()
# check which distribution
if (grepl('cluster_1',file)){
points = read.csv('../distributions/points/cluster1.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('uniform',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('uniform',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
if (grepl('cluster_2',file)){
points = read.csv('../distributions/points/cluster2.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('uniform',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('uniform',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
if (grepl('shape',file)){
points = read.csv('../distributions/points/shape_20.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('uniform',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('uniform',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
}
files = list.files('../cosines/distance/') # get all filens in this directory
for (file in files){
# for each item in files
file = files[1]
data = read.csv(paste('../cosines/distance/',file, sep = ''), header = TRUE,check.names=F) # load data
# get the string headers for points
#num_points = sum(grepl('\\d',colnames(data)))
d = simtodist(data.matrix(data)[0:num_points,0:num_points],gamma=1)
#fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
fit <- isoMDS(d, k=2) # k is the number of dim
fit # view results
# plot solution
x <- fit$points[,1]
y <- fit$points[,2]
jpeg(paste('plots/distance/',file,'.jpg'))
plot(x, y, xlab="", ylab="",
main="", type="n")
text(x, y, labels = colnames(data)[0:num_points], cex=1.5)
#text(x, y, labels = colnames(data)[0:num_points], cex=1.5)
dev.off()
# check which distribution
if (grepl('cluster_1',file)){
points = read.csv('../distributions/points/cluster1.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('roc',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('distance',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
if (grepl('cluster_2',file)){
points = read.csv('../distributions/points/cluster2.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('roc',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('distance',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
if (grepl('shape',file)){
points = read.csv('../distributions/points/shape_20.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('roc',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('distance',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
}
files = list.files('../cosines/distance/') # get all filens in this directory
for (file in files){
# for each item in files
# file = files[1]
data = read.csv(paste('../cosines/distance/',file, sep = ''), header = TRUE,check.names=F) # load data
# get the string headers for points
#num_points = sum(grepl('\\d',colnames(data)))
d = simtodist(data.matrix(data)[0:num_points,0:num_points],gamma=1)
#fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
fit <- isoMDS(d, k=2) # k is the number of dim
fit # view results
# plot solution
x <- fit$points[,1]
y <- fit$points[,2]
jpeg(paste('plots/distance/',file,'.jpg'))
plot(x, y, xlab="", ylab="",
main="", type="n")
text(x, y, labels = colnames(data)[0:num_points], cex=1.5)
#text(x, y, labels = colnames(data)[0:num_points], cex=1.5)
dev.off()
# check which distribution
if (grepl('cluster_1',file)){
points = read.csv('../distributions/points/cluster1.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('roc',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('distance',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
if (grepl('cluster_2',file)){
points = read.csv('../distributions/points/cluster2.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('roc',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('distance',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
if (grepl('shape',file)){
points = read.csv('../distributions/points/shape_20.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('roc',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('distance',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
}
files = list.files('../cosines/distance/') # get all filens in this directory
for (file in files){
# for each item in files
# file = files[1]
data = read.csv(paste('../cosines/distance/',file, sep = ''), header = TRUE,check.names=F) # load data
# get the string headers for points
#num_points = sum(grepl('\\d',colnames(data)))
d = simtodist(data.matrix(data)[0:num_points,0:num_points],gamma=1)
#fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
fit <- isoMDS(d, k=2) # k is the number of dim
fit # view results
# plot solution
x <- fit$points[,1]
y <- fit$points[,2]
jpeg(paste('plots/distance/',file,'.jpg'))
plot(x, y, xlab="", ylab="",
main="", type="n")
text(x, y, labels = colnames(data)[0:num_points], cex=1.5)
#text(x, y, labels = colnames(data)[0:num_points], cex=1.5)
dev.off()
# check which distribution
if (grepl('cluster_1',file)){
points = read.csv('../distributions/points/cluster1.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('roc',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('distance',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
if (grepl('cluster_2',file)){
points = read.csv('../distributions/points/cluster2.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('roc',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('distance',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
if (grepl('shape',file)){
points = read.csv('../distributions/points/shape_20.csv')
points = cbind(points,x,y)
colnames(points) = c('indepV1','indepV2','depV1','depV2')
out = BiDimRegression(points)
# bid_reg = rbind(bid_reg, c('roc',file,out$euclidean.r, out$euclidean.pValue, out$euclidean.rsqr))
bid_reg = rbind(bid_reg, c('distance',file,out$affine.r, out$affine.pValue, out$affine.rsqr))
}
}
